{"version":3,"sources":["App.js","Column.js","Algorithms/InsertionSort.js","Algorithms/BubbleSort.js","Algorithms/QuickSort.js","serviceWorker.js","index.js","Main.js"],"names":["bottomUpColumns","topDownColumns","Column","x","y","width","height","this","insertionSort","data","canvasContext","columnArray","delay","dimension","isTopDown","isCompareModeOn","callback","nestedLoop","timer","ms","Promise","res","setTimeout","task","a","clearReact","i","canvasHeight","factor","clearRect","Math","ceil","dataArg","slice","length","curr","currRectHeight","j","prevRectHeight","fillStyle","fillRect","bubbleSort","getRectHeight","value","drawRect","reactHeight","floor","temp","rectHeight1","rectHeight2","quickSort","dataParam","low","high","quickSortAlgo","swap","items","leftIndex","rightIndex","partition","left","right","pivotIndex","pivot","pivotRectHeight","index","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","button","drawColumn","ctx","xpos","ypos","App","toggleDarkTheme","isDarkMode","classes","canvasRef","useRef","useState","xPos","yPox","canvasWidth","setDimension","numColumns","setNumColumns","speed","setSpeed","disabled","setDisabled","sortingAlgoDown","setSortingAlgoDown","sortingAlgoUp","setSortingAlgoUp","setCompareMode","useEffect","canvas","current","canvasX","getBoundingClientRect","canvasY","numOfRects","getContext","rectWidth","random","rectHeight","push","draw","style","display","alignItems","maxWidth","padding","justifyContent","marginRight","fontSize","fontWeight","Slider","aria-labelledby","valueLabelDisplay","step","min","max","onChange","e","v","flexDirection","FormControl","className","InputLabel","htmlFor","Select","event","target","MenuItem","Button","onClick","argsBottom","argsTop","variant","color","FormControlLabel","control","Switch","checked","labelPlacement","label","IconButton","edge","aria-label","aria-controls","border","ref","window","innerHeight","Boolean","location","hostname","match","ReactDOM","render","palette","type","primary","purple","secondary","green","status","danger","setTheme","muiThemeApp","createMuiTheme","ThemeProvider","CssBaseline","Container","newPaletteType","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dff51dde.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport Column from './Column';\nimport { quickSort, bubbleSort, insertionSort } from './Algorithms';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(2, 0),\n    minWidth: 200\n  },\n  button: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst RECT_WIDTH = 20;\nconst GUTTER = 4;\nconst CANVAS_PADDING = 4;\nconst DELAY = 400;\n\nlet bottomUpColumns;\nlet topDownColumns;\nlet data = [];\n\nconst drawColumn = (ctx, xpos, ypos, width = RECT_WIDTH, height) => {\n  ctx.fillStyle = '#6002EE';\n  ctx.fillRect(xpos, ypos, width, height);\n};\n\nconst draw = (canvasRef, dimension, numOfRects, factor = 2) => {\n  const canvas = canvasRef.current;\n  const ctx = canvas.getContext('2d');\n  const { canvasWidth, canvasHeight } = dimension;\n\n  topDownColumns = [];\n  bottomUpColumns = [];\n  data = [];\n\n  if (canvasWidth) {\n    const rectWidth =\n      (canvasWidth - 2 * CANVAS_PADDING - (numOfRects - 1) * GUTTER) /\n      numOfRects;\n    let xPos = 0;\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    for (let i = 0; i < numOfRects; i++) {\n      let value = Math.random();\n      let rectHeight =\n        (value >= 0.8 ? value - 0.1 : value) * (canvasHeight / factor);\n      if (factor === 2) {\n        drawColumn(\n          ctx,\n          Math.floor(xPos),\n          0,\n          Math.floor(rectWidth),\n          Math.floor(canvasHeight / 2 - rectHeight)\n        );\n        topDownColumns.push(\n          new Column(\n            Math.floor(xPos),\n            0,\n            Math.floor(rectWidth),\n            Math.floor(canvasHeight / 2 - rectHeight)\n          )\n        );\n      }\n      drawColumn(\n        ctx,\n        Math.floor(xPos),\n        Math.floor(canvasHeight),\n        Math.floor(rectWidth),\n        Math.floor(-canvasHeight / factor + rectHeight)\n      );\n\n      bottomUpColumns.push(\n        new Column(\n          Math.floor(xPos),\n          Math.floor(canvasHeight),\n          Math.floor(rectWidth),\n          Math.floor(-canvasHeight / factor + rectHeight)\n        )\n      );\n      xPos += rectWidth + GUTTER;\n      data.push(value);\n    }\n  }\n};\n\nconst App = ({ toggleDarkTheme, isDarkMode }) => {\n  const classes = useStyles();\n  const canvasRef = useRef(null);\n  const [dimension, setDimension] = useState({\n    xPos: 0,\n    yPox: 0,\n    canvasWidth: 0,\n    canvasHeight: 0\n  });\n  const [numColumns, setNumColumns] = useState(100);\n  const [speed, setSpeed] = useState(4);\n  const [disabled, setDisabled] = useState(false);\n  const [sortingAlgoDown, setSortingAlgoDown] = useState('Quick Sort');\n  const [sortingAlgoUp, setSortingAlgoUp] = useState('Insertion Sort');\n  const [isCompareModeOn, setCompareMode] = useState(false);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const canvasX = canvas.getBoundingClientRect().x;\n    const canvasY = canvas.getBoundingClientRect().x;\n    const canvasWidth = 990;\n    const canvasHeight = canvas.getBoundingClientRect().height;\n    setDimension({\n      xPos: canvasX,\n      yPox: canvasY,\n      canvasHeight,\n      canvasWidth\n    });\n  }, []);\n\n  useEffect(() => {\n    if (dimension.canvasWidth) {\n      draw(\n        canvasRef,\n        dimension,\n        numColumns < 195 ? numColumns : 195,\n        isCompareModeOn ? 2 : 1\n      );\n    }\n  }, [dimension, numColumns, isCompareModeOn]);\n\n  const onSort = () => {\n    setDisabled(true);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const argsBottom = [\n      data,\n      ctx,\n      bottomUpColumns,\n      DELAY / speed,\n      dimension,\n      false,\n      isCompareModeOn,\n      () => {\n        setDisabled(false);\n      }\n    ];\n    const argsTop = [\n      data,\n      ctx,\n      topDownColumns,\n      DELAY / speed,\n      dimension,\n      true,\n      isCompareModeOn,\n      () => {\n        setDisabled(false);\n      }\n    ];\n\n    if (sortingAlgoDown === 'Bubble Sort') {\n      bubbleSort(...argsBottom);\n    } else if (sortingAlgoDown === 'Insertion Sort') {\n      insertionSort(...argsBottom);\n    } else if (sortingAlgoDown === 'Quick Sort') {\n      quickSort(...argsBottom);\n    }\n\n    if (isCompareModeOn) {\n      if (sortingAlgoUp === 'Bubble Sort') {\n        bubbleSort(...argsTop);\n      } else if (sortingAlgoUp === 'Insertion Sort') {\n        insertionSort(...argsTop);\n      } else if (sortingAlgoUp === 'Quick Sort') {\n        quickSort(...argsTop);\n      }\n    }\n  };\n\n  const handleChangeDown = event => {\n    setSortingAlgoDown(event.target.value);\n  };\n\n  const handleChangeUp = event => {\n    setSortingAlgoUp(event.target.value);\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          maxWidth: 1000,\n          padding: '0px',\n          margin: '0px auto',\n          justifyContent: 'space-between'\n        }}\n      >\n        <div>\n          <div style={{ marginRight: 16 }}>\n            <p style={{ display: 'flex', justifyContent: 'space-between' }}>\n              Size of Data:\n              <span style={{ fontSize: 16, fontWeight: 'bold' }}>\n                {numColumns}\n              </span>\n            </p>\n            <Slider\n              disabled={disabled}\n              style={{ width: 200 }}\n              value={numColumns}\n              aria-labelledby=\"discrete-slider-always\"\n              valueLabelDisplay=\"auto\"\n              step={1}\n              min={2}\n              max={200}\n              onChange={(e, v) => {\n                setNumColumns(v);\n              }}\n            />\n          </div>\n          <div style={{ marginRight: 8 }}>\n            <p style={{ display: 'flex', justifyContent: 'space-between' }}>\n              Speed\n              <span style={{ fontSize: 16, fontWeight: 'bold' }}>\n                x{speed / 4}\n              </span>\n            </p>\n            <Slider\n              disabled={disabled}\n              style={{ width: 200 }}\n              aria-labelledby=\"discrete-slider-always\"\n              valueLabelDisplay=\"auto\"\n              min={1}\n              max={32}\n              value={speed}\n              onChange={(e, v) => setSpeed(v)}\n            />\n          </div>\n        </div>\n        <form style={{ display: 'flex', flexDirection: 'column' }}>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"age-simple\">\n              {isCompareModeOn\n                ? 'Select second Algorithm'\n                : 'Select an Algorithm'}\n            </InputLabel>\n            <Select value={sortingAlgoDown} onChange={handleChangeDown}>\n              <MenuItem value=\"Bubble Sort\">Bubble Sort</MenuItem>\n              <MenuItem value=\"Quick Sort\">Quick Sort</MenuItem>\n              <MenuItem value=\"Insertion Sort\">Insertion Sort</MenuItem>\n            </Select>\n          </FormControl>\n          {isCompareModeOn ? (\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"age-simple\">\n                Select first Algorithm\n              </InputLabel>\n              <Select value={sortingAlgoUp} onChange={handleChangeUp}>\n                <MenuItem value=\"Bubble Sort\">Bubble Sort</MenuItem>\n                <MenuItem value=\"Quick Sort\">Quick Sort</MenuItem>\n                <MenuItem value=\"Insertion Sort\">Insertion Sort</MenuItem>\n              </Select>\n            </FormControl>\n          ) : null}\n        </form>\n        <Button\n          disabled={disabled}\n          onClick={onSort}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Sort\n        </Button>\n        <FormControlLabel\n          disabled={disabled}\n          control={\n            <Switch\n              checked={isCompareModeOn}\n              onChange={e => setCompareMode(e.target.checked)}\n            />\n          }\n          labelPlacement=\"top\"\n          label={isCompareModeOn ? 'Disable Comparison' : 'Enable Comparison'}\n        />\n        <IconButton\n          edge=\"end\"\n          aria-label=\"toggle dark mode\"\n          aria-controls=\"menu-appbar\"\n          onClick={toggleDarkTheme}\n          color=\"inherit\"\n        >\n          {isDarkMode ? <WbSunnyIcon /> : <Brightness2Icon />}\n        </IconButton>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center'\n        }}\n      >\n        <canvas\n          style={{\n            padding: `${CANVAS_PADDING}px`,\n            margin: '0px',\n            border: !isDarkMode ? '2px solid #6002EE' : '2px solid #6002EE'\n          }}\n          ref={canvasRef}\n          width={982}\n          height={window.innerHeight - 180}\n        />\n      </div>\n    </div>\n  );\n};\nexport default App;\n","class Column {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  setPosition(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\nexport default Column;\n","import Column from '../Column';\n\nexport const insertionSort = (\n  data,\n  canvasContext,\n  columnArray,\n  delay = 0,\n  dimension,\n  isTopDown,\n  isCompareModeOn,\n  callback\n) => {\n  nestedLoop(\n    data,\n    canvasContext,\n    columnArray,\n    delay,\n    dimension,\n    isTopDown,\n    isCompareModeOn ? 2 : 1,\n    callback\n  );\n};\n\nconst timer = ms => {\n  return new Promise(res => setTimeout(res, ms));\n};\n\nconst task = async delay => {\n  await timer(delay);\n};\n\nconst clearReact = (\n  i,\n  canvasHeight,\n  canvasContext,\n  columnArray,\n  isTopDown,\n  factor\n) => {\n  if (isTopDown) {\n    canvasContext.clearRect(\n      columnArray[i].x,\n      0,\n      Math.ceil(columnArray[i].width),\n      canvasHeight / 2\n    );\n  } else {\n    canvasContext.clearRect(\n      columnArray[i].x,\n      factor === 2 ? canvasHeight / factor : 0,\n      Math.ceil(columnArray[i].width),\n      canvasHeight / factor\n    );\n  }\n};\n\nconst nestedLoop = async (\n  dataArg,\n  canvasContext,\n  columnArray,\n  delay,\n  dimension,\n  isTopDown,\n  factor,\n  callback\n) => {\n  const data = dataArg.slice(0);\n  const length = data.length;\n  const { canvasHeight } = dimension;\n  for (let i = 1; i < length; i++) {\n    let curr = data[i];\n    let currRectHeight = data[i] * (canvasHeight / factor);\n    let j = i;\n    while (j > 0 && data[j - 1] < curr) {\n      let prevRectHeight = data[j - 1] * (canvasHeight / factor);\n      columnArray[j] = new Column(\n        columnArray[j].x,\n        columnArray[j].y,\n        columnArray[j].width,\n        isTopDown\n          ? Math.ceil(canvasHeight / factor - prevRectHeight)\n          : Math.ceil(-canvasHeight / factor + prevRectHeight)\n      );\n      clearReact(\n        j,\n        canvasHeight,\n        canvasContext,\n        columnArray,\n        isTopDown,\n        factor\n      );\n      canvasContext.fillStyle = '#00FF91';\n      canvasContext.fillRect(\n        columnArray[j].x,\n        isTopDown ? 0 : canvasHeight,\n        columnArray[j].width,\n        isTopDown\n          ? Math.ceil(canvasHeight / factor - prevRectHeight)\n          : Math.ceil(-canvasHeight / factor + prevRectHeight)\n      );\n      data[j] = data[j - 1];\n      j--;\n      await task(delay);\n    }\n    columnArray[j] = new Column(\n      columnArray[j].x,\n      columnArray[j].y,\n      columnArray[j].width,\n      isTopDown\n        ? Math.ceil(canvasHeight / factor - currRectHeight)\n        : Math.ceil(-canvasHeight / factor + currRectHeight)\n    );\n    clearReact(j, canvasHeight, canvasContext, columnArray, isTopDown, factor);\n    canvasContext.fillStyle = '#00FF91';\n    canvasContext.fillRect(\n      columnArray[j].x,\n      isTopDown ? 0 : canvasHeight,\n      columnArray[j].width,\n      isTopDown\n        ? Math.ceil(canvasHeight / factor - currRectHeight)\n        : Math.ceil(-canvasHeight / factor + currRectHeight)\n    );\n    data[j] = curr;\n  }\n  callback();\n};\n","import Column from '../Column';\n\nexport const bubbleSort = (\n  data,\n  canvasContext,\n  columnArray,\n  delay = 0,\n  dimension,\n  isTopDown,\n  isCompareModeOn,\n  callback\n) => {\n  nestedLoop(\n    data,\n    canvasContext,\n    columnArray,\n    delay,\n    dimension,\n    isTopDown,\n    isCompareModeOn ? 2 : 1,\n    callback\n  );\n};\n\nconst timer = ms => {\n  return new Promise(res => setTimeout(res, ms));\n};\n\nconst task = async delay => {\n  await timer(delay);\n};\n\nconst getRectHeight = (value, canvasHeight, isTopDown, factor) => {\n  if (isTopDown) {\n    return canvasHeight / factor - value * (canvasHeight / factor);\n  } else {\n    return value * (canvasHeight / factor) - canvasHeight / factor;\n  }\n};\n\nconst drawRect = (i, reactHeight, canvasContext, columnArray, isTopDown) => {\n  if (!isTopDown) {\n    canvasContext.fillRect(\n      columnArray[i].x,\n      columnArray[i].y,\n      columnArray[i].width,\n      Math.floor(reactHeight)\n    );\n  } else {\n    canvasContext.fillRect(\n      columnArray[i].x,\n      0,\n      columnArray[i].width,\n      Math.floor(reactHeight)\n    );\n  }\n};\n\nconst clearReact = (\n  i,\n  canvasHeight,\n  canvasContext,\n  columnArray,\n  isTopDown,\n  factor\n) => {\n  if (!isTopDown) {\n    canvasContext.clearRect(\n      columnArray[i].x,\n      factor === 2 ? canvasHeight / 2 : 0,\n      Math.ceil(columnArray[i].width + columnArray[i + 1].width) + 8,\n      canvasHeight / factor\n    );\n  } else {\n    canvasContext.clearRect(\n      columnArray[i].x,\n      0,\n      Math.ceil(columnArray[i].width),\n      canvasHeight / 2\n    );\n  }\n};\n\nconst nestedLoop = async (\n  dataArg,\n  canvasContext,\n  columnArray,\n  delay,\n  dimension,\n  isTopDown,\n  factor,\n  callback\n) => {\n  const data = dataArg.slice(0);\n  const length = data.length;\n  for (let i = 0; i < length - 1; i++) {\n    for (let j = 0; j < length - i - 1; j++) {\n      let temp;\n      let { canvasHeight } = dimension;\n      if (data[j] < data[j + 1]) {\n        temp = data[j];\n        data[j] = data[j + 1];\n        data[j + 1] = temp;\n        let rectHeight1 = getRectHeight(\n          data[j],\n          canvasHeight,\n          isTopDown,\n          factor\n        );\n        let rectHeight2 = getRectHeight(\n          data[j + 1],\n          canvasHeight,\n          isTopDown,\n          factor\n        );\n        columnArray[j] = new Column(\n          columnArray[j].x,\n          columnArray[j].y,\n          columnArray[j].width,\n          Math.floor(rectHeight1)\n        );\n        columnArray[j + 1] = new Column(\n          columnArray[j + 1].x,\n          columnArray[j + 1].y,\n          columnArray[j + 1].width,\n          Math.floor(rectHeight2)\n        );\n        clearReact(\n          j,\n          canvasHeight,\n          canvasContext,\n          columnArray,\n          isTopDown,\n          factor\n        );\n        drawRect(j, rectHeight1, canvasContext, columnArray, isTopDown);\n        canvasContext.fillStyle = '#00FF91';\n        drawRect(j + 1, rectHeight2, canvasContext, columnArray, isTopDown);\n      }\n      // canvasContext.fillStyle = '#6002EE';\n      await task(delay);\n    }\n  }\n  callback();\n};\n","import Column from '../Column';\n\nexport const quickSort = (\n  dataParam,\n  canvasContext,\n  columnArray,\n  delay = 0,\n  dimension,\n  isTopDown,\n  isCompareModeOn,\n  callback\n) => {\n  let data = dataParam.slice(0);\n  let low = 0;\n  let high = data.length - 1;\n  quickSortAlgo(\n    data,\n    low,\n    high,\n    canvasContext,\n    columnArray,\n    delay,\n    dimension,\n    isTopDown,\n    isCompareModeOn ? 2 : 1,\n    callback\n  );\n};\n\nconst timer = ms => {\n  return new Promise(res => setTimeout(res, ms));\n};\n\nconst task = async delay => {\n  await timer(delay);\n};\n\nconst getRectHeight = (value, canvasHeight, isTopDown, factor) => {\n  if (isTopDown) {\n    return canvasHeight / factor - value * (canvasHeight / factor);\n  } else {\n    return value * (canvasHeight / factor) - canvasHeight / factor;\n  }\n};\n\nconst clearReact = (\n  i,\n  canvasHeight,\n  canvasContext,\n  columnArray,\n  isTopDown,\n  factor\n) => {\n  if (isTopDown) {\n    canvasContext.clearRect(\n      columnArray[i].x,\n      0,\n      Math.ceil(columnArray[i].width),\n      canvasHeight / 2\n    );\n  } else {\n    canvasContext.clearRect(\n      columnArray[i].x,\n      factor === 2 ? canvasHeight / factor : 0,\n      Math.ceil(columnArray[i].width),\n      canvasHeight / factor\n    );\n  }\n};\n\nconst swap = async (items, leftIndex, rightIndex, delay) => {\n  let temp = items[leftIndex];\n  items[leftIndex] = items[rightIndex];\n  items[rightIndex] = temp;\n  await task(delay);\n};\n\nconst drawRect = (i, reactHeight, canvasContext, columnArray, isTopDown) => {\n  if (!isTopDown) {\n    canvasContext.fillRect(\n      columnArray[i].x,\n      columnArray[i].y,\n      columnArray[i].width,\n      Math.ceil(reactHeight)\n    );\n  } else {\n    canvasContext.fillRect(\n      columnArray[i].x,\n      0,\n      columnArray[i].width,\n      Math.floor(reactHeight)\n    );\n  }\n};\n\nconst partition = async (\n  items,\n  left,\n  right,\n  canvasContext,\n  columnArray,\n  delay,\n  dimension,\n  isTopDown,\n  factor\n) => {\n  let { canvasHeight } = dimension;\n  let pivotIndex = Math.floor((right + left) / 2),\n    pivot = items[pivotIndex], //middle element\n    i = left, //left pointer\n    j = right; //right pointer\n  let pivotRectHeight = getRectHeight(\n    items[pivotIndex],\n    canvasHeight,\n    isTopDown,\n    factor\n  );\n  columnArray[pivotIndex] = new Column(\n    columnArray[pivotIndex].x,\n    columnArray[pivotIndex].y,\n    columnArray[pivotIndex].width,\n    Math.floor(pivotRectHeight)\n  );\n  clearReact(\n    pivotIndex,\n    canvasHeight,\n    canvasContext,\n    columnArray,\n    isTopDown,\n    factor\n  );\n  canvasContext.fillStyle = '#FF0040';\n  drawRect(pivotIndex, pivotRectHeight, canvasContext, columnArray, isTopDown);\n  while (i <= j) {\n    while (items[i] > pivot) {\n      i++;\n    }\n    while (items[j] < pivot) {\n      j--;\n    }\n    if (i <= j) {\n      await swap(items, i, j, delay); //sawpping two elements\n      let rectHeight1 = getRectHeight(\n        items[i],\n        canvasHeight,\n        isTopDown,\n        factor\n      );\n      let rectHeight2 = getRectHeight(\n        items[j],\n        canvasHeight,\n        isTopDown,\n        factor\n      );\n      columnArray[i] = new Column(\n        columnArray[i].x,\n        columnArray[i].y,\n        columnArray[i].width,\n        Math.floor(rectHeight1)\n      );\n      columnArray[j] = new Column(\n        columnArray[j].x,\n        columnArray[j].y,\n        columnArray[j].width,\n        Math.floor(rectHeight2)\n      );\n      clearReact(\n        i,\n        canvasHeight,\n        canvasContext,\n        columnArray,\n        isTopDown,\n        factor\n      );\n      clearReact(\n        j,\n        canvasHeight,\n        canvasContext,\n        columnArray,\n        isTopDown,\n        factor\n      );\n      canvasContext.fillStyle = '#00FF91';\n      drawRect(i, rectHeight1, canvasContext, columnArray, isTopDown);\n      drawRect(j, rectHeight2, canvasContext, columnArray, isTopDown);\n      i++;\n      j--;\n    }\n  }\n  return i;\n};\n\nconst quickSortAlgo = async (\n  items,\n  left,\n  right,\n  canvasContext,\n  columnArray,\n  delay,\n  dimension,\n  isTopDown,\n  factor,\n  callback\n) => {\n  let index;\n  if (items.length > 1) {\n    index = await partition(\n      items,\n      left,\n      right,\n      canvasContext,\n      columnArray,\n      delay,\n      dimension,\n      isTopDown,\n      factor\n    ); //index returned from partition\n    if (left < index - 1) {\n      //more elements on the left side of the pivot\n      await quickSortAlgo(\n        items,\n        left,\n        index - 1,\n        canvasContext,\n        columnArray,\n        delay,\n        dimension,\n        isTopDown,\n        factor,\n        callback\n      );\n    }\n    if (index < right) {\n      //more elements on the right side of the pivot\n      await quickSortAlgo(\n        items,\n        index,\n        right,\n        canvasContext,\n        columnArray,\n        delay,\n        dimension,\n        isTopDown,\n        factor,\n        callback\n      );\n    }\n  }\n  if (left === 0 && right === columnArray.length - 1) {\n    callback();\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport App from './App';\n// Material-UI stuff\nimport { createMuiTheme, useTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// TODO: Create a separate file for this\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport Container from '@material-ui/core/Container';\n\nexport default function Main() {\n  const [theme, setTheme] = useState({\n    palette: {\n      type: 'dark',\n      primary: purple,\n      secondary: green\n    },\n    status: {\n      danger: 'orange'\n    }\n  });\n  const toggleDarkTheme = () => {\n    let newPaletteType = theme.palette.type === 'light' ? 'dark' : 'light';\n    setTheme({\n      palette: {\n        type: newPaletteType,\n        primary: purple,\n        secondary: green\n      },\n      status: {\n        danger: 'orange'\n      }\n    });\n  };\n  const muiThemeApp = createMuiTheme(theme);\n  return (\n    <ThemeProvider theme={muiThemeApp}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <App\n          toggleDarkTheme={toggleDarkTheme}\n          isDarkMode={theme.palette.type === 'dark'}\n        />\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}